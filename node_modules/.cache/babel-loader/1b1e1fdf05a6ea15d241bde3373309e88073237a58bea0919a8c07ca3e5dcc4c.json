{"ast":null,"code":"var _jsxFileName = \"/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport bestPitches from \"./bestPitches.csv\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500\n  },\n  tableContainer: {\n    maxHeight: 600\n  }\n});\nexport const Results = () => {\n  _s();\n  const classes = useStyles();\n  const [playerData, setPlayerData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(bestPitches);\n      const data = await response.text();\n      let parsedData = data.split(\"\\n\").map(row => row.split(\",\"));\n      while (parsedData.length > 0 && parsedData[parsedData.length - 1].every(cell => !cell)) {\n        parsedData.pop();\n      }\n      const headers = parsedData.shift();\n      const players = parsedData.map(row => headers.reduce((obj, header, index) => {\n        obj[header] = row[index];\n        return obj;\n      }, {}));\n      setPlayerData(players);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        stickyHeader: true,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: orderBy === \"player_name\",\n                direction: order,\n                children: \"Player Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: orderBy === \"pitch_type\",\n                direction: order,\n                children: \"Pitch Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: orderBy === \"stuffGrade\",\n                direction: order,\n                children: \"Stuff Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: orderBy === \"nPitches\",\n                direction: order,\n                children: \"nPitches\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.player_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.pitch_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.stuffGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.nPitches\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"ljKHRFP8x72R7ZOy3CpaLXmufCE=\", false, function () {\n  return [useStyles];\n});\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","bestPitches","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableSortLabel","TextField","makeStyles","jsxDEV","_jsxDEV","useStyles","table","minWidth","tableContainer","maxHeight","Results","_s","classes","playerData","setPlayerData","fetchData","response","fetch","data","text","parsedData","split","map","row","length","every","cell","pop","headers","shift","players","reduce","obj","header","index","children","component","className","stickyHeader","active","orderBy","direction","order","fileName","_jsxFileName","lineNumber","columnNumber","sortedData","player_name","pitch_type","stuffGrade","nPitches","_c","$RefreshReg$"],"sources":["/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport bestPitches from \"./bestPitches.csv\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableSortLabel,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n  tableContainer: {\n    maxHeight: 600,\n  },\n});\n\n\n\n\nexport const Results = () => {\n  const classes = useStyles();\n  const [playerData, setPlayerData] = useState([]);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(bestPitches);\n      const data = await response.text();\n      let parsedData = data.split(\"\\n\").map((row) => row.split(\",\"));\n      while (parsedData.length > 0 && parsedData[parsedData.length - 1].every((cell) => !cell)) {\n        parsedData.pop();\n      }\n      const headers = parsedData.shift();\n      const players = parsedData.map((row) =>\n        headers.reduce((obj, header, index) => {\n          obj[header] = row[index];\n          return obj;\n        }, {})\n      );\n      setPlayerData(players);\n    };\n    fetchData();\n  }, []);\n\n\n\n\n  \n\n  return (\n    <div>\n\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"player_name\"}\n                  direction={order}\n                >\n                  Player Name\n                </TableSortLabel>\n              </TableCell>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"pitch_type\"}\n                  direction={order}\n                >\n                  Pitch Type\n                </TableSortLabel>\n              </TableCell>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"stuffGrade\"}\n                  direction={order}\n                >\n                  Stuff Grade\n                </TableSortLabel>\n              </TableCell>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"nPitches\"}\n                  direction={order}\n                >\n                  nPitches\n                </TableSortLabel>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {sortedData.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell>{row.player_name}</TableCell>\n                <TableCell>{row.pitch_type}</TableCell>\n                <TableCell>{row.stuffGrade}</TableCell>\n                <TableCell>{row.nPitches}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}