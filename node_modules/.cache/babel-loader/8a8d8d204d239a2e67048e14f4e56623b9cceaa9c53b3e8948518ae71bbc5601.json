{"ast":null,"code":"var _jsxFileName = \"/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport \"./Results.css\";\nimport \"react-table/react-table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"bestPitches.csv\").then(response => response.text()).then(csvText => {\n      const result = Papa.parse(csvText, {\n        header: true\n      });\n      setData(result.data);\n    });\n  }, []);\n  const columns = [{\n    Header: \"Player Name\",\n    accessor: \"player_name\"\n  }, {\n    Header: \"Pitch Type\",\n    accessor: \"pitch_type\"\n  }, {\n    Header: \"Stuff Grade\",\n    accessor: \"stuffGrade\",\n    sortType: \"basic\"\n  }, {\n    Header: \"# of Pitches\",\n    accessor: \"nPitches\",\n    sortType: \"basic\"\n  }];\n  const {\n    setFilter,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      sortBy: [{\n        id: \"stuffGrade\",\n        desc: true\n      }]\n    }\n  }, useFilters, useSortBy);\n  const handleSearch = e => {\n    const value = e.target.value || \"\";\n    setFilter(\"player_name\", value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleSearch,\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? \" ▼\" : \" ▲\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"5qcH+wkLdYDJRsGRoxC4k+9qlR4=\", false, function () {\n  return [useTable];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","Papa","useTable","useSortBy","useFilters","jsxDEV","_jsxDEV","Results","_s","data","setData","fetch","then","response","text","csvText","result","parse","header","columns","Header","accessor","sortType","setFilter","headerGroups","rows","prepareRow","initialState","sortBy","id","desc","handleSearch","e","value","target","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport \"./Results.css\";\nimport \"react-table/react-table.css\";\n\nconst Results = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"bestPitches.csv\")\n      .then((response) => response.text())\n      .then((csvText) => {\n        const result = Papa.parse(csvText, { header: true });\n        setData(result.data);\n      });\n  }, []);\n\n  const columns = [\n    {\n      Header: \"Player Name\",\n      accessor: \"player_name\",\n    },\n    {\n      Header: \"Pitch Type\",\n      accessor: \"pitch_type\",\n    },\n    {\n      Header: \"Stuff Grade\",\n      accessor: \"stuffGrade\",\n      sortType: \"basic\",\n    },\n    {\n      Header: \"# of Pitches\",\n      accessor: \"nPitches\",\n      sortType: \"basic\",\n    },\n  ];\n\n  const { setFilter, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n      initialState: { sortBy: [{ id: \"stuffGrade\", desc: true }] },\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const handleSearch = (e) => {\n    const value = e.target.value || \"\";\n    setFilter(\"player_name\", value);\n  };\n\n  return (\n    <div className=\"table-container\">\n      <div className=\"search-container\">\n        <input type=\"text\" onChange={handleSearch} placeholder=\"Search\" />\n      </div>\n      <table className=\"table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ▼\"\n                        : \" ▲\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}