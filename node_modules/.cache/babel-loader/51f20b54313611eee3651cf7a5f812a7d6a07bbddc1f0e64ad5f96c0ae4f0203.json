{"ast":null,"code":"var _jsxFileName = \"/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport csvData from \"./data.csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Results = () => {\n  _s();\n  const [filter, setFilter] = useState(\"\");\n  const [data, setData] = useState([]);\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const handleDataLoad = event => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      const text = event.target.result;\n      const rows = text.split(\"\\n\");\n      const headers = rows[0].split(\",\");\n      const results = [];\n      for (let i = 1; i < rows.length; i++) {\n        const values = rows[i].split(\",\");\n        if (values[0].toLowerCase().includes(filter.toLowerCase())) {\n          const item = {};\n          for (let j = 0; j < headers.length; j++) {\n            item[headers[j]] = values[j];\n          }\n          results.push(item);\n        }\n      }\n      setData(results);\n    };\n    reader.readAsText(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter by player name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"filter\",\n        value: filter,\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csv\",\n        accept: \".csv\",\n        onChange: handleDataLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pitch Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stuff Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Release Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"InducedVertBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.player_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.pitch_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stuffGrade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.release_speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.InducedVertBreak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"xDLh3xwhYqSMSz9cWqpN0gskqZI=\");\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","csvData","jsxDEV","_jsxDEV","Results","_s","filter","setFilter","data","setData","handleFilterChange","event","target","value","handleDataLoad","reader","FileReader","onload","text","result","rows","split","headers","results","i","length","values","toLowerCase","includes","item","j","push","readAsText","files","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","accept","map","row","index","player_name","pitch_type","stuffGrade","release_speed","InducedVertBreak","_c","$RefreshReg$"],"sources":["/Users/Jared/CS4664/pitch-quality/src/components/Pages/Results.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport csvData from \"./data.csv\";\n\nexport const Results = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleDataLoad = (event) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const text = event.target.result;\n      const rows = text.split(\"\\n\");\n      const headers = rows[0].split(\",\");\n      const results = [];\n\n      for (let i = 1; i < rows.length; i++) {\n        const values = rows[i].split(\",\");\n        if (values[0].toLowerCase().includes(filter.toLowerCase())) {\n          const item = {};\n          for (let j = 0; j < headers.length; j++) {\n            item[headers[j]] = values[j];\n          }\n          results.push(item);\n        }\n      }\n\n      setData(results);\n    };\n\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"filter\">Filter by player name:</label>\n        <input type=\"text\" id=\"filter\" value={filter} onChange={handleFilterChange} />\n      </div>\n      <div>\n        <input type=\"file\" id=\"csv\" accept=\".csv\" onChange={handleDataLoad} />\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Player Name</th>\n            <th>Pitch Type</th>\n            <th>Stuff Grade</th>\n            <th>Release Speed</th>\n            <th>InducedVertBreak</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              <td>{row.player_name}</td>\n              <td>{row.pitch_type}</td>\n              <td>{row.stuffGrade}</td>\n              <td>{row.release_speed}</td>\n              <td>{row.InducedVertBreak}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,kBAAkB,GAAIC,KAAK,IAAK;IACpCJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,cAAc,GAAIH,KAAK,IAAK;IAChC,MAAMI,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAIN,KAAK,IAAK;MACzB,MAAMO,IAAI,GAAGP,KAAK,CAACC,MAAM,CAACO,MAAM;MAChC,MAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC;MAC7B,MAAMC,OAAO,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;MAClC,MAAME,OAAO,GAAG,EAAE;MAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,MAAME,MAAM,GAAGN,IAAI,CAACI,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;QACjC,IAAIK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACtB,MAAM,CAACqB,WAAW,EAAE,CAAC,EAAE;UAC1D,MAAME,IAAI,GAAG,CAAC,CAAC;UACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,OAAO,CAACG,MAAM,EAAEK,CAAC,EAAE,EAAE;YACvCD,IAAI,CAACP,OAAO,CAACQ,CAAC,CAAC,CAAC,GAAGJ,MAAM,CAACI,CAAC,CAAC;UAC9B;UACAP,OAAO,CAACQ,IAAI,CAACF,IAAI,CAAC;QACpB;MACF;MAEApB,OAAO,CAACc,OAAO,CAAC;IAClB,CAAC;IAEDR,MAAM,CAACiB,UAAU,CAACrB,KAAK,CAACC,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,oBACE9B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAOgC,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACtDpC,OAAA;QAAOqC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,QAAQ;QAAC5B,KAAK,EAAEP,MAAO;QAACoC,QAAQ,EAAEhC;MAAmB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1E,eACNpC,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAOqC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,KAAK;QAACE,MAAM,EAAC,MAAM;QAACD,QAAQ,EAAE5B;MAAe;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACNpC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,eACE/B,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAI;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACpBpC,OAAA;YAAA+B,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACnBpC,OAAA;YAAA+B,QAAA,EAAI;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACpBpC,OAAA;YAAA+B,QAAA,EAAI;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACtBpC,OAAA;YAAA+B,QAAA,EAAI;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACtB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACRpC,OAAA;QAAA+B,QAAA,EACG1B,IAAI,CAACoC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnB3C,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAKW,GAAG,CAACE;UAAW;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAC1BpC,OAAA;YAAA+B,QAAA,EAAKW,GAAG,CAACG;UAAU;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACzBpC,OAAA;YAAA+B,QAAA,EAAKW,GAAG,CAACI;UAAU;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACzBpC,OAAA;YAAA+B,QAAA,EAAKW,GAAG,CAACK;UAAa;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAC5BpC,OAAA;YAAA+B,QAAA,EAAKW,GAAG,CAACM;UAAgB;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA,GALxBO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAClC,EAAA,CAlEWD,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}